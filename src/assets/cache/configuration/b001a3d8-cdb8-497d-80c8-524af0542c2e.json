[
    {
        "id": "1_TOPOGRAPHIC",
        "title": "Topographic",
        "description": "",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\n// DEM Topographic Visualization\nfunction setup() {\n  return {\n    input: [\"DEM\"],\n    output: { bands: 3 }\n  };\n}\n\nfunction evaluatePixel(sample) {\n\n  let val = sample.DEM;\n  let imgVals = null;\n\n  if (val > 8000) imgVals = [1, 1, 1];\n  else if (val > 7000) imgVals = [0.95, 0.95, 0.95];\n  else if (val > 6000) imgVals = [0.9, 0.9, 0.9];\n  else if (val > 5500) imgVals = [0.29, 0.22, 0.07];\n  else if (val > 5000) imgVals = [0.37, 0.30, 0.15];\n  else if (val > 4500) imgVals = [0.45, 0.38, 0.22];\n  else if (val > 4000) imgVals = [0.53, 0.45, 0.30];\n  else if (val > 3500) imgVals = [0.6, 0.53, 0.38];\n  else if (val > 3000) imgVals = [0.68, 0.61, 0.46];\n  else if (val > 2500) imgVals = [0.76, 0.69, 0.54];\n  else if (val > 2000) imgVals = [0.84, 0.77, 0.62];\n  else if (val > 1500) imgVals = [0.92, 0.85, 0.69];\n  else if (val > 1000) imgVals = [0.99, 0.93, 0.75];\n  else if (val > 900) imgVals = [0.67, 0.87, 0.63];\n  else if (val > 800) imgVals = [0.65, 0.84, 0.61];\n  else if (val > 700) imgVals = [0.59, 0.81, 0.56];\n  else if (val > 600) imgVals = [0.52, 0.76, 0.48];\n  else if (val > 500) imgVals = [0.48, 0.73, 0.44];\n  else if (val > 400) imgVals = [0.45, 0.70, 0.40];\n  else if (val > 300) imgVals = [0.37, 0.64, 0.33];\n  else if (val > 200) imgVals = [0.30, 0.58, 0.25];\n  else if (val > 100) imgVals = [0.24, 0.53, 0.24];\n  else if (val > 75) imgVals = [0.21, 0.49, 0.23];\n  else if (val > 50) imgVals = [0.18, 0.45, 0.18];\n  else if (val > 25) imgVals = [0.15, 0.41, 0.13];\n  else if (val > 10) imgVals = [0.12, 0.37, 0.08];\n  else if (val > 0) imgVals = [0.09, 0.33, 0.03];\n  else imgVals = [0.06, 0.06, 0.55];\n\n  return imgVals;\n}"
            }
        ],
        "orderHint": 0,
        "instanceId": "b001a3-YOUR-INSTANCEID-HERE",
        "lastUpdated": "2024-10-21T06:03:26.969561Z",
        "collectionType": "DEM",
        "datasetSourceId": 4,
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "clampNegative": false,
            "demInstance": "COPERNICUS_30",
            "EGM": false,
            "type": "DEM"
        }
    },
    {
        "id": "COLOR",
        "title": "Color",
        "description": "",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\n// To set custom max and min values, set\n// choose your max and min values. \n// The color map will then be scaled\n// to those max and min values\nconst max = 9000\nconst min = -12000\n\nfunction setup() {\n    return {\n        input: [\"DEM\", \"dataMask\"],\n        output: { bands: 4, sampleTYPE: \"AUTO\" },\n    };\n}\n\nconst map = [\n    [9000, 0xffffff],\n    [7000, 0xdcefff],\n    [5000, 0xbdc7f9],\n    [3000, 0x9faaef],\n    [1000, 0x788bb4],\n    [500, 0x8b6d00],\n    [400, 0xd292b4],\n    [300, 0x78385a],\n    [200, 0xaa5f00],\n    [50, 0x8b4b28],\n    [30, 0x782d28],\n    [10, 0x63383b],\n    [0, 0xc7c7c7],\n    [-10, 0x9f9fff],\n    [-20, 0x7878eb],\n    [-50, 0x5a54f9],\n    [-200, 0x3b50f5],\n    [-500, 0x3b3be6],\n    [-1000, 0x2831b4],\n    [-6000, 0x1e1e78],\n    [-9000, 0x1e005a],\n    [-12000, 0x000028],\n];\n\nconst visualizer = new ColorRampVisualizer(map, min, max);\n\nfunction evaluatePixel(sample) {\n    let val = sample.DEM;\n    let imgVals = visualizer.process(val)\n\n    // Return the 4 inputs and define content for each one\n    return [...imgVals, sample.dataMask]\n}"
            }
        ],
        "orderHint": 0,
        "instanceId": "b001a3-YOUR-INSTANCEID-HERE",
        "lastUpdated": "2024-10-21T05:53:58.228642Z",
        "collectionType": "DEM",
        "datasetSourceId": 4,
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "clampNegative": false,
            "EGM": false,
            "type": "DEM"
        }
    },
    {
        "id": "GRAYSCALE",
        "title": "Grayscale",
        "description": "",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\n// To set custom max and min values, set\n// choose your max and min values.\n// The color map will then be scaled\n// to those max and min values\nconst max = 9000;\nconst min = -12000;\n\nfunction setup() {\n  return {\n    input: [\"DEM\", \"dataMask\"],\n    output: { bands: 4, sampleTYPE: \"AUTO\" },\n  };\n}\n\nconst map = [\n  [9000, 0xffffff],\n  [7000, 0xf9f9f9],\n  [5000, 0xf5f5f5],\n  [3000, 0xebebeb],\n  [1000, 0xe0e0e0],\n  [500, 0xd6d6d6],\n  [400, 0xc7c7c7],\n  [300, 0xb4b4b4],\n  [200, 0x9f9f9f],\n  [50, 0x8b8b8b],\n  [30, 0x828282],\n  [10, 0x6d6d6d],\n  [0, 0x636363],\n  [-10, 0x5a5a5a],\n  [-20, 0x545454],\n  [-50, 0x505050],\n  [-200, 0x4a4a4a],\n  [-500, 0x464646],\n  [-1000, 0x3d3d3d],\n  [-5000, 0x373737],\n  [-9000, 0x181818],\n  [-12000, 0x000000],\n];\n\nconst visualizer = new ColorRampVisualizer(map, min, max);\n\nfunction evaluatePixel(sample) {\n  let val = sample.DEM;\n  let imgVals = visualizer.process(val);\n\n  // Return the 4 inputs and define content for each one\n  return [...imgVals, sample.dataMask];\n}"
            }
        ],
        "orderHint": 0,
        "instanceId": "b001a3-YOUR-INSTANCEID-HERE",
        "lastUpdated": "2024-10-21T06:00:18.032065Z",
        "collectionType": "DEM",
        "datasetSourceId": 4,
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "clampNegative": false,
            "demInstance": "COPERNICUS_30",
            "EGM": false,
            "type": "DEM"
        }
    },
    {
        "id": "SEPIA",
        "title": "Sepia",
        "description": "",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\n// To set custom max and min values, set\n// choose your max and min values.\n// The color map will then be scaled\n// to those max and min values\nconst max = 9000;\nconst min = -12000;\n\nfunction setup() {\n  return {\n    input: [\"DEM\", \"dataMask\"],\n    output: { bands: 4, sampleTYPE: \"AUTO\" },\n  };\n}\n\nconst map = [\n  [9000, 0xff952c],\n  [7000, 0xf9922c],\n  [5000, 0xf5902b],\n  [3000, 0xeb8929],\n  [1000, 0xe08428],\n  [500, 0xd67d25],\n  [400, 0xc77522],\n  [300, 0xb46a1f],\n  [200, 0x9f5e1c],\n  [50, 0x8b5218],\n  [30, 0x824b16],\n  [10, 0x6d4013],\n  [0, 0x633911],\n  [-10, 0x5a3510],\n  [-20, 0x502e0e],\n  [-50, 0x3b2209],\n  [-200, 0x2c1a07],\n  [-500, 0x221306],\n  [-1000, 0x180e04],\n  [-5000, 0x0f0702],\n  [-9000, 0x050200],\n  [-12000, 0x000000],\n];\n\nconst visualizer = new ColorRampVisualizer(map, min, max);\n\nfunction evaluatePixel(sample) {\n  let val = sample.DEM;\n  let imgVals = visualizer.process(val);\n\n  // Return the 4 inputs and define content for each one\n  return [...imgVals, sample.dataMask];\n}"
            }
        ],
        "orderHint": 0,
        "instanceId": "b001a3-YOUR-INSTANCEID-HERE",
        "lastUpdated": "2024-10-21T06:01:31.494601Z",
        "collectionType": "DEM",
        "datasetSourceId": 4,
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "clampNegative": false,
            "EGM": false,
            "type": "DEM"
        }
    }
]